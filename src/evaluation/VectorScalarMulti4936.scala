package evaluation

import automaticDifferentiation.AutomaticDifferentiate
import differentiate.DifferentiateExpr
import eval.DoubleEvaluator
import intermediateRep.{Array, Param}

object VectorScalarMulti4936 extends App{

  //4936

  //evaluation: 1.471918478

  //0.983660858s
  //0.996252318s
  //1.106265156s
  //1.245827339s
  //1.458718271s
  //1.485118685s
  //1.846216264s
  //1.914877495s
  //1.943439094s
  //2.52857708s

  //auto-diff

  //1.44527466s
  //1.264294009s
  //1.224523476s
  //1.139893374s
  //1.120919112s
  //1.107801704s
  //1.095229924s
  //1.01691834s
  //1.006224455s

  //diff: 1.947
  //1.946844833s
  //1.817392258s
  //1.768418418s
  //1.469644502s
  //1.459555175s
  //1.340768424s
  //1.334392968
  //1.139948086
  //1.097143372s
  //1.008262955s

  var x = Param("x")

  var x_0 = Param("x_0")
  var x_1 = Param("x_1")
  var x_2 = Param("x_2")
  var elemtype1 = DoubleEvaluator.eval((x_1 * x_2))

  var elemtype2 = DoubleEvaluator.eval(x_0 + (x_1 + x_2))
  var elemtype3 = DoubleEvaluator.eval(x_0 * (x_1 / x_2))

  var exp = List(elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
  elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype3, elemtype1, elemtype1, elemtype2,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype3,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype2, elemtype2, elemtype2,
    elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype3, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1,
    elemtype1, elemtype3, elemtype2, elemtype2, elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype2, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype3, elemtype1, elemtype3, elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1,
    elemtype3, elemtype3, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype3, elemtype2, elemtype3, elemtype2, elemtype3,elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype1, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2,
    elemtype1, elemtype1, elemtype2, elemtype2, elemtype3, elemtype2, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype1, elemtype3, elemtype2, elemtype2, elemtype3, elemtype3, elemtype3, elemtype3, elemtype3, elemtype1, elemtype1, elemtype1,
    elemtype3, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype3, elemtype1, elemtype1, elemtype3, elemtype1, elemtype3, elemtype3,
    elemtype2, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype2, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype2, elemtype3, elemtype1, elemtype3, elemtype3, elemtype3, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype2, elemtype1,
    elemtype2, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype2, elemtype1, elemtype3, elemtype1, elemtype2, elemtype1, elemtype2,
    elemtype3, elemtype2, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype3, elemtype1, elemtype2, elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,
    elemtype3, elemtype1, elemtype2, elemtype1, elemtype2, elemtype3, elemtype2, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype2, elemtype1, elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2, elemtype1, elemtype1, elemtype1,elemtype1, elemtype1, elemtype1, elemtype2, elemtype3, elemtype1, elemtype1, elemtype3, elemtype3, elemtype2,elemtype3
  )

  //println(exp.length)
  //println(exp.length)
  //var vector = DoubleEvaluator.eval(x * Array(exp, x.t))
  val t0 = System.nanoTime()
  //val result = AutomaticDifferentiate.autodifferentiate(vector, x) // call-by-name
 //DifferentiateExpr.differentiate(vector, x)
  DoubleEvaluator.eval(x * Array(exp, x.t))
  val t1 = System.nanoTime()

  println("Elapsed time: " + (t1 - t0)/(1e+9) + "s")

  // println(exp.length)
  //println(Evaluator.printString(DoubleEvaluator.eval(x * Array(exp, x.t))))
 // println(Evaluator.printString(result))
//  //println(result.t)
//  var check =  List(((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_1 * x) + ((x_2 * x_1) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))), ((DoubleLiteral(0.0) * x) + ((x_2 + x_0) * DoubleLiteral(1.0))), ((x_0 * x) + ((x_2 * x_0) * DoubleLiteral(1.0))))
//  println(check.length)
//  println(exp.length)
  // var check = List(DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0), DoubleLiteral(1.0))
 // println(check.length)
}
